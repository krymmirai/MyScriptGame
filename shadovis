loadstring(game:HttpGet("https://raw.githubusercontent.com/krymmirai/SaveProject/main/HideOpen",true))()

local plr = game.Players.LocalPlayer
local cha = plr.Character or plr.CharacterAdded:Wait()
local hrp = cha:WaitForChild("HumanoidRootPart")
local hum = cha:WaitForChild("Humanoid")

plr.CharacterAdded:Connect(function(character)
    cha = character 
    hrp = cha:WaitForChild("HumanoidRootPart")
    hum = cha:WaitForChild("Humanoid")
end)
if not game:IsLoaded() then
    game.Loaded:Wait()
    end
    wait()

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

--function
local plr = game.Players.LocalPlayer
local cha = plr.Character or plr.CharacterAdded:Wait()
local hrp = cha:WaitForChild("HumanoidRootPart")
local hum = cha:WaitForChild("Humanoid")
local x = require(game:GetService("ReplicatedStorage").WeaponData)
local types = {"SFOTH", "Sword", "Club", "Longsword", "Katana", "Axe", "Spear", "Domini", "Knife", "Aguman", "Trident", "Mallet", "Blade", "Gauntlets", "Lance", "Scythe", "Twin Blade", "Greatsword", "Falchion", "Fans", "Claws"}
local request = http_request or request or HttpPost or syn.request
local senv = getsenv(plr.PlayerScripts.Client)
local hooked = {}
_G.Weapon = nil 
_G.WeaponType = nil 
_G.WeaponM1 = nil
local queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)

if game:GetService("ReplicatedStorage"):WaitForChild("UnloadedMaps") then 
    for i,v in pairs(game:GetService("ReplicatedStorage"):WaitForChild("UnloadedMaps"):GetChildren()) do 
        v.Parent = game.Workspace.Maps 
    end 
end

if game:GetService("ReplicatedStorage"):WaitForChild("UnloadedEnemies") then 
    for i,v in pairs(game:GetService("ReplicatedStorage"):WaitForChild("UnloadedEnemies"):GetChildren()) do 
        v.Parent = game.Workspace.NPCs
    end 
end

plr.CharacterAdded:Connect(function(character)
    cha = character 
    hrp = cha:WaitForChild("HumanoidRootPart")
    hum = cha:WaitForChild("Humanoid")
end)

if game:GetService("Workspace"):FindFirstChild("Stuff") then 
    game:GetService("Workspace").Stuff:Destroy()
    wait(1)
    local folder = Instance.new("Folder")
    folder.Parent = game:GetService("Workspace")
    folder.Name = "Stuff"
else 
    local folder = Instance.new("Folder")
    folder.Parent = game:GetService("Workspace")
    folder.Name = "Stuff"
end 

local drops = {} 

for i,v in pairs(x) do 
    if (not table.find(drops, i)) then 
        table.insert(drops, i)
        table.sort(drops)
    end 
end 

local enemies = {} 

for i,v in pairs(game.Workspace.NPCs:GetChildren()) do 
    local split = string.split(v.Name, "Lv")
    if (not table.find(enemies, split[1])) then 
        table.insert(enemies, split[1])
        table.sort(enemies)
    end 
end 

game.Workspace.NPCs.ChildAdded:Connect(function(child)
    local split = string.split(child.Name, "Lv")
    if (not table.find(enemies, split[1])) then 
        table.insert(enemies, split[1])
        table.sort(enemies)
    end 
end)

local oldmt 
oldmt = hookmetamethod(game, "__index", function(self, index)
    if self == hum and index == ("WalkSpeed" or "JumpPower") then
        return 16
    end 
    return oldmt(self, index)
end)

local fixes = {
    ["K"] = 10 ^ 3,
    ["M"] = 10 ^ 6,
    ["B"] = 10 ^ 9,
    ["T"] = 10 ^ 12,
    ["Qd"] = 10 ^ 15, 
    ["Qn"] = 10 ^ 18,
    ["Sx"] = 10 ^ 21,
    ["Sp"] = 10 ^ 24
}


local function getallnearby(range)
    local atable = {} 
    for i,v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do 
        if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then 
            local distance = (v.HumanoidRootPart.Position - hrp.Position).Magnitude 
            if distance < (range or 15) then 
                table.insert(atable, v.HumanoidRootPart)
            end 
        end 
    end 
    return atable
end 

cha.Equipment.ChildAdded:Connect(function(child)
    if x[child.Name] and table.find(types, x[child.Name].Type) then 
        _G.Weapon = child.Name 
        _G.WeaponType = x[child.Name].Type 
        local req = require(game:GetService("ReplicatedStorage").CombatData[tostring(x[child.Name].Type)])
        for i,v in pairs(debug.getconstants(req)) do 
            if v == "SlashEvent" then 
                _G.WeaponM1 = "SlashEvent"
            elseif v == "StabEvent" then 
                _G.WeaponM1 = "StabEvent"
            elseif v == "SlamEvent" then 
                _G.WeaponM1 = "SlamEvent"
            elseif v == "JoustHurt" then 
                _G.WeaponM1 = "JoustHurt"
            end 
        end
    end
end) 

for i,v in pairs(cha.Equipment:GetChildren()) do 
    if x[v.Name] and table.find(types, x[v.Name].Type) then 
        _G.Weapon = v.Name 
        _G.WeaponType = x[v.Name].Type 
        local req = require(game:GetService("ReplicatedStorage").CombatData[_G.WeaponType])
        for i,v in pairs(debug.getconstants(req)) do 
            if v == "SlashEvent" then 
                _G.WeaponM1 = "SlashEvent"
            elseif v == "StabEvent" then 
                _G.WeaponM1 = "StabEvent"
            elseif v == "SlamEvent" then 
                _G.WeaponM1 = "SlamEvent"
            elseif v == "JoustHurt" then 
                _G.WeaponM1 = "JoustHurt"
            end 
        end
    end 
end 




--UI Library Window

local Window = Library.CreateLib("Zero2 Hub / ", "Midnight")
local status = Window:NewTab("Status")
local Misc = Window:NewTab("Misc")

--status
local stat = status:NewSection("Status")
stat:NewLabel("Name : ".. game.Players.LocalPlayer.Character.Name .." [Dev]")
stat:NewLabel("PlaceID : ".. game.PlaceId .."")
stat:NewButton("Copy PlaceId", "ButtonInfo", function()
    
end)
stat:NewLabel("JobID : ".. game.JobId .."")
stat:NewButton("Copy JobId", "ButtonInfo", function()
    setclipboard(game.JobId)
end)
stat:NewLabel("Script Make By SadThudatinh (Owner)")
stat:NewKeybind("KeybindText", "KeybindInfo", Enum.KeyCode.F6, function()
	Library:ToggleUI()
end)
--Misc
local farm = Misc:NewSection("Status")
getgenv().Killaura = true

farm:NewToggle("Kill Aura", "???", function(AA1)
    getgenv().Killaura = AA1
    if AA1 then
        doaura();
    end
end)

function doaura()
    spawn(function()
        while Killaura == true do
            if getallnearby(40) ~= 0 then 
                for i,v in pairs(getallnearby(40)) do 
                    cha.Combat.RemoteEvent:FireServer("Input", _G.Weapon, math.random, _G.WeaponM1, v)
                end 
            end 
            task.wait()
        end
    end)
 end

 getgenv().AutoBlock = true

 farm:NewToggle("Auto Block", "???", function(AA2)
     getgenv().AutoBlock = AA2
     if AA2 then
        doblock();
     end
 end)
 
 function doblock()
     spawn(function()
         while AutoBlock == true do
             local args = {[1] = 1}
             autoblock()
             task.wait(.1)
         end
     end)
  end

function autoblock()
for i,v in pairs(game.Players.LocalPlayer.Character.Equipment:GetChildren()) do 
    if x[v.Name] and game:GetService("ReplicatedStorage").CombatData:FindFirstChild(x[v.Name].Type) then
        local req = require(game:GetService("ReplicatedStorage").CombatData[x[v.Name].Type])
        for i1,v1 in pairs(debug.getconstants(req)) do 
            if v1 == "Block" then 
                cha.Combat.RemoteEvent:FireServer("Input", v.Name, math.random, "Block")
            end
        end
    end
end
end

