loadstring(game:HttpGet("https://raw.githubusercontent.com/krymmirai/SaveProject/main/HideOpen",true))()
getgenv().Enabled = true
local Run = game:GetService("RunService")
local plr = game.Players.LocalPlayer
local cha = plr.Character or plr.CharacterAdded:Wait()
local hrp = cha:WaitForChild("HumanoidRootPart")
local hum = cha:WaitForChild("Humanoid")
local x = require(game:GetService("ReplicatedStorage").WeaponData)
_G.Weapon = nil 
_G.WeaponType = nil 
_G.WeaponM1 = nil

plr.CharacterAdded:Connect(function(character)
    cha = character 
    hrp = cha:WaitForChild("HumanoidRootPart")
    hum = cha:WaitForChild("Humanoid")
end)
if not game:IsLoaded() then
    game.Loaded:Wait()
    end
    wait()

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
--test
local Run = game:GetService("RunService")
local plr = game.Players.LocalPlayer
local weaponData = require(game:GetService("ReplicatedStorage").WeaponData)
local combatData = game:GetService("ReplicatedStorage").CombatData

local WeaponName, WeaponType, WeaponM1Name

local function getM1Name(Weapon, WeaponType)
    local weaponModule = require(combatData[WeaponType])
    
    local Data = {
        Character = game.Players.LocalPlayer.Character,
        Stats = {AS = 1},
        Tools = {Weapon},
        Anim = require(game.ReplicatedStorage.AnimationService),
    }
    
    for i,v in next, weaponModule(Data, Weapon) do
        if v.LMB then
            return v.LMB[1]
        end
    end
end

local meleeWeaponNames = {
    "Sword",
    "Club",
    "Longsword",
    "Axe",
    "Katana",
    "Spear",
    "Axe",
    "Knife",
    "Mallet",
    "Blade",
    "Gauntlets",
    "Lance",
    "Scythe",
    "Twin Blade"
}

local function isMeleeWeapon(WeaponName)
    if weaponData[WeaponName] and table.find(meleeWeaponNames, weaponData[WeaponName].Type) then
        return true
    end
end

for i,v in next, plr.Character.Equipment:GetChildren() do
    if isMeleeWeapon(v.Name) then
        WeaponName, WeaponType = v.Name, weaponData[v.Name].Type
        WeaponM1Name = getM1Name(v, WeaponType)
    end
end

plr.Character.Equipment.ChildAdded:Connect(function(v)
    if isMeleeWeapon(v.Name) then
        WeaponName, WeaponType = v.Name, weaponData[v.Name].Type
        WeaponM1Name = getM1Name(v, WeaponType)
    end
end)

local function DamageMob(mob)
    if mob and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
        plr.Character.Combat.RemoteEvent:FireServer("Input", WeaponName, math.random(), WeaponM1Name.."Event", mob.PrimaryPart)
    end
end
--function

plr.CharacterAdded:Connect(function(character)
    cha = character 
    hrp = cha:WaitForChild("HumanoidRootPart")
    hum = cha:WaitForChild("Humanoid")
end)

if game:GetService("Workspace"):FindFirstChild("Stuff") then 
    game:GetService("Workspace").Stuff:Destroy()
    wait(1)
    local folder = Instance.new("Folder")
    folder.Parent = game:GetService("Workspace")
    folder.Name = "Stuff"
else 
    local folder = Instance.new("Folder")
    folder.Parent = game:GetService("Workspace")
    folder.Name = "Stuff"
end 

cha.Equipment.ChildAdded:Connect(function(child)
    if x[child.Name] and table.find(types, x[child.Name].Type) then 
        _G.Weapon = child.Name 
        _G.WeaponType = x[child.Name].Type 
        local req = require(game:GetService("ReplicatedStorage").CombatData[tostring(x[child.Name].Type)])
        for i,v in pairs(debug.getconstants(req)) do 
            if v == "SlashEvent" then 
                _G.WeaponM1 = "SlashEvent"
            elseif v == "StabEvent" then 
                _G.WeaponM1 = "StabEvent"
            elseif v == "SlamEvent" then 
                _G.WeaponM1 = "SlamEvent"
            elseif v == "JoustHurt" then 
                _G.WeaponM1 = "JoustHurt"
            end 
        end
    end
end) 

--UI Library Window

local Window = Library.CreateLib("Zero2 Hub / ", "Midnight")
local status = Window:NewTab("Status")
local Misc = Window:NewTab("Misc")

--status
local stat = status:NewSection("Status")
stat:NewLabel("Name : ".. game.Players.LocalPlayer.Character.Name .." [Dev]")
stat:NewLabel("PlaceID : ".. game.PlaceId .."")
stat:NewButton("Copy PlaceId", "ButtonInfo", function()
    
end)
stat:NewLabel("JobID : ".. game.JobId .."")
stat:NewButton("Copy JobId", "ButtonInfo", function()
    setclipboard(game.JobId)
end)
stat:NewLabel("Script Make By SadThudatinh (Owner)")
stat:NewKeybind("KeybindText", "KeybindInfo", Enum.KeyCode.F6, function()
	Library:ToggleUI()
end)
--Misc
local farm = Misc:NewSection("Status")
getgenv().Killaura = true

farm:NewToggle("Kill Aura", "???", function(AA1)
    getgenv().Killaura = AA1
    if AA1 then
        doaura();
    end
end)

function doaura()
    spawn(function()
        while Killaura == true do
            if getgenv().Enabled ~= true then return end
    task.wait(0.1)
    for i,v in next, workspace.NPCs:GetChildren() do
        local dist = (plr.Character.PrimaryPart.Position - v.PrimaryPart.Position).Magnitude

        if dist < getgenv().MaxRange then
            DamageMob(v)
        end
    end
            task.wait()
        end
    end)
 end

 getgenv().AutoBlock = true

 farm:NewToggle("Auto Block", "???", function(AA2)
     getgenv().AutoBlock = AA2
     if AA2 then
        doblock();
     end
 end)
 
 function doblock()
     spawn(function()
         while AutoBlock == true do
             local args = {[1] = 1}
             autoblock()
             task.wait(.1)
         end
     end)
  end

function autoblock()
for i,v in pairs(game.Players.LocalPlayer.Character.Equipment:GetChildren()) do 
    if x[v.Name] and game:GetService("ReplicatedStorage").CombatData:FindFirstChild(x[v.Name].Type) then
        local req = require(game:GetService("ReplicatedStorage").CombatData[x[v.Name].Type])
        for i1,v1 in pairs(debug.getconstants(req)) do 
            if v1 == "Block" then 
                cha.Combat.RemoteEvent:FireServer("Input", v.Name, math.random, "Block")
            end
        end
    end
end
end

